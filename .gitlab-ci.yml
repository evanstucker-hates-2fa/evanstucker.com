# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
#stages:
#- test
#sast:
#  stage: test
#include:
#- template: Security/SAST.gitlab-ci.yml

# From: https://gitlab.com/pages/hugo

# All available Hugo versions are listed here: https://gitlab.com/pages/hugo/container_registry
image: registry.gitlab.com/pages/hugo:latest

variables:
  GIT_SUBMODULE_STRATEGY: recursive

test:
  script:
  - hugo
  rules:
    - if: $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH

hugificate_website:
  script:
  - hugo
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

# IPFS stuff here:
# https://github.com/ipfs-shipyard/ipfs-dns-deploy
# or maybe this:
# http://docs.ipfs.io.ipns.localhost:8080/how-to/work-with-pinning-services/
pin_to_ipfs:
  image: ipfs/go-ipfs
  script:
  - ipfs init
  - export CID=$(ipfs add -Q -r public)
  - ipfs pin remote service add pinata https://api.pinata.cloud/psa "${PINATA_JWT}"
  - ipfs pin remote add --service=pinata "${CID}"
  artifacts:
    paths:
    - public
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH

# Broken example with Pinana
# Maybe try this instead: https://docs.pinata.cloud/api-pinning/pin-file#pinning-a-directory-example
# curl -F file=@public/ -H "Authorization: Bearer ${PINATA_JWT}" -X POST https://api.pinata.cloud/pinning/pinFileToIPFS
